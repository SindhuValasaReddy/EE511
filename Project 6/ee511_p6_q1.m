% Date : March 30 2017
% Name : Sindhu Valasa Reddy
% USC ID : 8047774699
% Email : valasare@usc.edu
% EE 511 : Project #6 - Continuous Sampling
% Question 1

clc;
clear all;
N = 1376000;                                  % No of samples
% Using Box Muller Method to generate random variables X and Y
tic;                                            % Start the timer
M1 = 1;                                         % Mean of X
M2 = 2;                                         % Mean of Y
V1 = 4;                                         % Variance of X
V2 = 9;                                         % Variance of Y                                       
u1 = rand(N,1);                                 % Uniform random variables
u2 = rand(N,1);

% Generate X and Y that are N(0,1) random variables and independent
X_a = sqrt( - 2*log(u1)).*cos(2*pi*u2 ); 
Y_a = sqrt( - 2*log(u1)).*sin(2*pi*u2 );

% Scale them to a particular mean and variance 
x_a = sqrt(V1)*X_a + M1;                        % x~ N(M1,V1)
y_a = sqrt(V2)*Y_a + M2;                        % y~ N(M2,V2)
display('For Box Muller method');               % Display elapsed time for Box Muller method
toc;                                            % Read elapsed time from stopwatch
A_a = x_a + y_a;                                % A = X + Y
mean_A_a = mean(A_a);                           % Mean for A
mean_th_a = M1 + M2;                            % Theoretical mean for A
display('Mean of A is');
disp(mean_A_a);
display('Theoretical mean is');
disp(mean_th_a);
var_A_a = var(A_a);                             % Variance for A
var_th_a = V1 + V2;                             % Theoretical variance for A
display('Variance of A is');
disp(var_A_a);
display('Theoretical variance is');
disp(var_th_a);
cov_XY_a = cov(x_a,y_a);                        % Covariance between X and Y
covariance_a = cov_XY_a(1,2);
display('The covariance of X and Y is');
disp(covariance_a);
figure(1);
yyaxis left
A = [-15:0.1:15];
P = normpdf(A,3,sqrt(13));                      % Generate theoretical PDF 
plot(A,P);
yyaxis right
hist(A_a);
legend('Theoretical pdf of A','Histogram for A');
title('PDF of A overlaid on Histogram of A using Box Muller method');
xlabel('Random variable A = X + Y');
ylabel('Frequency/Probability of A');

% Using Polar Marsaglia Method to generate random variables X and Y

tic;                                            % Start the timer
i = 0;                                          % The random number generated by the algorithm 
% Generate X and Y that are N(0,1) random variables and independent
while(i<=N)
    r1 = 2*rand()-1;
    r2 = 2*rand()-1;
    s = r1^2 + r2^2;
    if(s < 1)
        i = i + 1;
        X_b(i) = sqrt(-2*log(s)/s)*r1;
        Y_b(i) = sqrt(-2*log(s)/s)*r2;
    end
end
% Scale them to a particular mean and variance 
x_b = sqrt(V1)*X_b + M1; % x~ N(M1,V1)
y_b = sqrt(V2)*Y_b + M2; % y~ N(M2,V2)
display('For Polar Marsaglia method');
toc; % Read elapsed time from stopwatch
A_b = x_b + y_b;                                % A = X + Y
mean_A_b = mean(A_b);                           % Mean for A
display('Mean of A is');
disp(mean_A_b);
display('Theoretical mean is');
disp(mean_th_a);
var_A_b = var(A_b);                             % Variance for A
display('Variance of A is');
disp(var_A_b);
display('Theoretical variance is');
disp(var_th_a);
cov_XY_b = cov(x_b,y_b);
covariance_b = cov_XY_b(1,2);
display('The covariance of X and Y is');
disp(covariance_b);                             % Covariance between X and Y
figure(2);
yyaxis left
C = [-15:0.1:15];
P = normpdf(C,3,sqrt(13));
plot(C,P);
yyaxis right
hist(A_b);
legend('Theoretical pdf of A','Histogram for A');
title('PDF of A overlaid on Histogram of A using Polar Marsaglia method');
xlabel('Random variable A = X + Y');
ylabel('Frequency/Probability of A');




